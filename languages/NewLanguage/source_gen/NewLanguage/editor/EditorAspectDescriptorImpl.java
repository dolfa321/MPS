package NewLanguage.editor;

/*Generated by MPS */

import jetbrains.mps.nodeEditor.EditorAspectDescriptorBase;
import org.jetbrains.annotations.NotNull;
import java.util.Collection;
import jetbrains.mps.openapi.editor.descriptor.ConceptEditor;
import org.jetbrains.mps.openapi.language.SAbstractConcept;
import java.util.Collections;
import jetbrains.mps.openapi.editor.descriptor.SubstituteMenu;
import jetbrains.mps.lang.smodel.ConceptSwitchIndex;
import jetbrains.mps.lang.smodel.ConceptSwitchIndexBuilder;
import jetbrains.mps.smodel.adapter.ids.MetaIdFactory;

public class EditorAspectDescriptorImpl extends EditorAspectDescriptorBase {
  @NotNull
  public Collection<ConceptEditor> getDeclaredEditors(SAbstractConcept concept) {
    SAbstractConcept cncpt = ((SAbstractConcept) concept);
    switch (conceptIndex.index(cncpt)) {
      case 0:
        return Collections.<ConceptEditor>singletonList(new ButtonRender_Editor());
      case 1:
        return Collections.<ConceptEditor>singletonList(new ComponentRender_Editor());
      case 2:
        return Collections.<ConceptEditor>singletonList(new RApi_Editor());
      case 3:
        return Collections.<ConceptEditor>singletonList(new RComponent_Editor());
      case 4:
        return Collections.<ConceptEditor>singletonList(new REndPoint_Editor());
      case 5:
        return Collections.<ConceptEditor>singletonList(new RInvetarDLS_Editor());
      case 6:
        return Collections.<ConceptEditor>singletonList(new RShow_Editor());
      case 7:
        return Collections.<ConceptEditor>singletonList(new RowRender_Editor());
      case 8:
        return Collections.<ConceptEditor>singletonList(new TextRender_Editor());
      default:
    }
    return Collections.<ConceptEditor>emptyList();
  }


  @NotNull
  @Override
  public Collection<SubstituteMenu> getDeclaredDefaultSubstituteMenus(SAbstractConcept concept) {
    SAbstractConcept cncpt = concept;
    switch (conceptIndex1.index(cncpt)) {
      case 0:
        return Collections.<SubstituteMenu>singletonList(new ComponentRender_SubstituteMenu());
      default:
    }
    return Collections.<SubstituteMenu>emptyList();
  }

  private static final ConceptSwitchIndex conceptIndex = new ConceptSwitchIndexBuilder().put(MetaIdFactory.conceptId(0xd25897b99aa4e01L, 0x981001ea0072c283L, 0x2b90a9c731294b12L), MetaIdFactory.conceptId(0xd25897b99aa4e01L, 0x981001ea0072c283L, 0x2c7d7d2448d98c8bL), MetaIdFactory.conceptId(0xd25897b99aa4e01L, 0x981001ea0072c283L, 0x2c7d7d2448d98cc4L), MetaIdFactory.conceptId(0xd25897b99aa4e01L, 0x981001ea0072c283L, 0x2c7d7d2448d98c8eL), MetaIdFactory.conceptId(0xd25897b99aa4e01L, 0x981001ea0072c283L, 0x2c7d7d2448d98cc8L), MetaIdFactory.conceptId(0xd25897b99aa4e01L, 0x981001ea0072c283L, 0x2c7d7d2448d98cddL), MetaIdFactory.conceptId(0xd25897b99aa4e01L, 0x981001ea0072c283L, 0x2c7d7d2448d98cd0L), MetaIdFactory.conceptId(0xd25897b99aa4e01L, 0x981001ea0072c283L, 0x2b90a9c731294b0eL), MetaIdFactory.conceptId(0xd25897b99aa4e01L, 0x981001ea0072c283L, 0x2c7d7d2448d98cdaL)).seal();
  private static final ConceptSwitchIndex conceptIndex1 = new ConceptSwitchIndexBuilder().put(MetaIdFactory.conceptId(0xd25897b99aa4e01L, 0x981001ea0072c283L, 0x2c7d7d2448d98c8bL)).seal();
}
