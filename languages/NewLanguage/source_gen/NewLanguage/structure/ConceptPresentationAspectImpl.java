package NewLanguage.structure;

/*Generated by MPS */

import jetbrains.mps.smodel.runtime.ConceptPresentationAspectBase;
import jetbrains.mps.smodel.runtime.ConceptPresentation;
import org.jetbrains.annotations.Nullable;
import org.jetbrains.mps.openapi.language.SAbstractConcept;
import jetbrains.mps.smodel.runtime.ConceptPresentationBuilder;

public class ConceptPresentationAspectImpl extends ConceptPresentationAspectBase {
  private ConceptPresentation props_Action;
  private ConceptPresentation props_ButtonRender;
  private ConceptPresentation props_ComponentRender;
  private ConceptPresentation props_IElementRender;
  private ConceptPresentation props_RApi;
  private ConceptPresentation props_RComponent;
  private ConceptPresentation props_REndPoint;
  private ConceptPresentation props_RInvetarDLS;
  private ConceptPresentation props_RShow;
  private ConceptPresentation props_RowRender;
  private ConceptPresentation props_TableRender;
  private ConceptPresentation props_TextRender;

  @Override
  @Nullable
  public ConceptPresentation getDescriptor(SAbstractConcept c) {
    StructureAspectDescriptor structureDescriptor = (StructureAspectDescriptor) myLanguageRuntime.getAspect(jetbrains.mps.smodel.runtime.StructureAspectDescriptor.class);
    switch (structureDescriptor.internalIndex(c)) {
      case LanguageConceptSwitch.Action:
        if (props_Action == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("Action");
          props_Action = cpb.create();
        }
        return props_Action;
      case LanguageConceptSwitch.ButtonRender:
        if (props_ButtonRender == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("ButtonRender");
          props_ButtonRender = cpb.create();
        }
        return props_ButtonRender;
      case LanguageConceptSwitch.ComponentRender:
        if (props_ComponentRender == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.presentationByReference(0xd25897b99aa4e01L, 0x981001ea0072c283L, 0x2c7d7d2448d98c8bL, 0x2c7d7d2448d98c8dL, "cName", "", "");
          props_ComponentRender = cpb.create();
        }
        return props_ComponentRender;
      case LanguageConceptSwitch.IElementRender:
        if (props_IElementRender == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          props_IElementRender = cpb.create();
        }
        return props_IElementRender;
      case LanguageConceptSwitch.RApi:
        if (props_RApi == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("RApi");
          props_RApi = cpb.create();
        }
        return props_RApi;
      case LanguageConceptSwitch.RComponent:
        if (props_RComponent == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.presentationByName();
          props_RComponent = cpb.create();
        }
        return props_RComponent;
      case LanguageConceptSwitch.REndPoint:
        if (props_REndPoint == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("REndPoint");
          props_REndPoint = cpb.create();
        }
        return props_REndPoint;
      case LanguageConceptSwitch.RInvetarDLS:
        if (props_RInvetarDLS == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.presentationByName();
          props_RInvetarDLS = cpb.create();
        }
        return props_RInvetarDLS;
      case LanguageConceptSwitch.RShow:
        if (props_RShow == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("RShow");
          props_RShow = cpb.create();
        }
        return props_RShow;
      case LanguageConceptSwitch.RowRender:
        if (props_RowRender == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("RowRender");
          props_RowRender = cpb.create();
        }
        return props_RowRender;
      case LanguageConceptSwitch.TableRender:
        if (props_TableRender == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("TableRender");
          props_TableRender = cpb.create();
        }
        return props_TableRender;
      case LanguageConceptSwitch.TextRender:
        if (props_TextRender == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("TextRender");
          props_TextRender = cpb.create();
        }
        return props_TextRender;
    }
    return null;
  }
}
