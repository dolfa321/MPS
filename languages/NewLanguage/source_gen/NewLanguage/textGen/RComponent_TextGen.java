package NewLanguage.textGen;

/*Generated by MPS */

import jetbrains.mps.text.rt.TextGenDescriptorBase;
import jetbrains.mps.text.rt.TextGenContext;
import jetbrains.mps.text.impl.TextGenSupport;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SPropertyOperations;
import org.jetbrains.mps.openapi.model.SNode;
import jetbrains.mps.internal.collections.runtime.Sequence;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SModelOperations;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations;
import org.jetbrains.mps.openapi.language.SProperty;
import jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory;
import org.jetbrains.mps.openapi.language.SConcept;
import org.jetbrains.mps.openapi.language.SContainmentLink;
import org.jetbrains.mps.openapi.language.SReferenceLink;

public class RComponent_TextGen extends TextGenDescriptorBase {
  @Override
  public void generateText(final TextGenContext ctx) {
    final TextGenSupport tgs = new TextGenSupport(ctx);
    tgs.append("import React, {useEffect, useState} from 'react';");
    tgs.newLine();
    tgs.append("import axios from 'axios';");
    tgs.newLine();
    tgs.newLine();
    tgs.append("function ");
    tgs.append(SPropertyOperations.getString(ctx.getPrimaryInput(), PROPS.name$MnvL));
    tgs.append("() {");
    tgs.newLine();
    ctx.getBuffer().area().increaseIndent();
    tgs.append("const [data, setData] = useState([]);");
    tgs.newLine();
    tgs.newLine();

    tgs.append("useEffect(() => { ");
    tgs.newLine();
    ctx.getBuffer().area().increaseIndent();
    tgs.append("const fetchData = async () => {");
    tgs.newLine();
    tgs.append("const response = await axios.get('");
    for (SNode apiUrl : Sequence.fromIterable(SLinkOperations.collectMany(SLinkOperations.collectMany(SModelOperations.roots(SNodeOperations.getModel(ctx.getPrimaryInput()), CONCEPTS.RInvetarDLS$fY), LINKS.api$Tu3n), LINKS.endPointList$T71q))) {
      if (SPropertyOperations.getString(apiUrl, PROPS.name$T7Kp) == SPropertyOperations.getString(ctx.getPrimaryInput(), PROPS.name$MnvL)) {
        tgs.append(SPropertyOperations.getString(apiUrl, PROPS.url$T7Zq));
      }
    }
    tgs.append("'); \n setData(response.data) \n");
    tgs.append("}; \n fetchData();");

    ctx.getBuffer().area().decreaseIndent();

    tgs.append("}, []);");
    tgs.newLine();
    tgs.newLine();

    tgs.indent();
    tgs.append("return (");
    tgs.newLine();
    ctx.getBuffer().area().increaseIndent();
    tgs.indent();
    for (SNode theme : Sequence.fromIterable(SLinkOperations.collectMany(SModelOperations.roots(SNodeOperations.getModel(ctx.getPrimaryInput()), CONCEPTS.RInvetarDLS$fY), LINKS.show$Tuio))) {
      if (SPropertyOperations.getBoolean(theme, PROPS.theme$TfHX)) {
        tgs.append("<div style={{ backgroundColor: '#121212', color: '#E0E0E0' }}>");
        tgs.newLine();
      } else {
        tgs.append("<div>");
        tgs.newLine();
      }
    }
    ctx.getBuffer().area().increaseIndent();
    for (SNode render : Sequence.fromIterable(SLinkOperations.collectMany(SModelOperations.roots(SNodeOperations.getModel(ctx.getPrimaryInput()), CONCEPTS.RInvetarDLS$fY), LINKS.renders$Tuxp))) {
      if (SPropertyOperations.getString(SLinkOperations.getTarget(render, LINKS.cName$PX2q), PROPS.name$MnvL) == SPropertyOperations.getString(ctx.getPrimaryInput(), PROPS.name$MnvL)) {
        tgs.appendNode(render);
      }
    }
    ctx.getBuffer().area().decreaseIndent();
    tgs.indent();
    for (SNode footer : Sequence.fromIterable(SLinkOperations.collectMany(SModelOperations.roots(SNodeOperations.getModel(ctx.getPrimaryInput()), CONCEPTS.RInvetarDLS$fY), LINKS.show$Tuio))) {
      if (SPropertyOperations.getBoolean(footer, PROPS.footer$TffV)) {
        tgs.indent();
        tgs.append("<footer");
        tgs.newLine();
        ctx.getBuffer().area().increaseIndent();
        tgs.indent();
        tgs.append("style={{ position: \"fixed\",\n bottom: 0, \n left: \"50%\", \n transform: \"translateX(-50%)\" \n, backgroundColor: \"#333\", \n color: \"white\", \n textAlign: \"center\", \n padding: \"10px\", \n width: \"100%\", \n }} \n > ");
        tgs.newLine();
        tgs.append("2025, Moj inventar. Vse pravice pridzane");
        tgs.newLine();
        tgs.append("</footer>");
        ctx.getBuffer().area().decreaseIndent();
      }
    }
    ctx.getBuffer().area().decreaseIndent();
    tgs.indent();
    tgs.append("</div>");
    tgs.newLine();
    tgs.indent();
    tgs.append(");");
    tgs.newLine();
    ctx.getBuffer().area().decreaseIndent();
    tgs.append("};");
    tgs.newLine();
    tgs.append("export default ");
    tgs.append(SPropertyOperations.getString(ctx.getPrimaryInput(), PROPS.name$MnvL));
    tgs.append(";");
    tgs.newLine();
  }

  private static final class PROPS {
    /*package*/ static final SProperty name$MnvL = MetaAdapterFactory.getProperty(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L, 0x110396ec041L, "name");
    /*package*/ static final SProperty name$T7Kp = MetaAdapterFactory.getProperty(0xd25897b99aa4e01L, 0x981001ea0072c283L, 0x2c7d7d2448d98cc8L, 0x2c7d7d2448d98cc9L, "name");
    /*package*/ static final SProperty url$T7Zq = MetaAdapterFactory.getProperty(0xd25897b99aa4e01L, 0x981001ea0072c283L, 0x2c7d7d2448d98cc8L, 0x2c7d7d2448d98ccaL, "url");
    /*package*/ static final SProperty theme$TfHX = MetaAdapterFactory.getProperty(0xd25897b99aa4e01L, 0x981001ea0072c283L, 0x2c7d7d2448d98cd0L, 0x2c7d7d2448d98cd5L, "theme");
    /*package*/ static final SProperty footer$TffV = MetaAdapterFactory.getProperty(0xd25897b99aa4e01L, 0x981001ea0072c283L, 0x2c7d7d2448d98cd0L, 0x2c7d7d2448d98cd3L, "footer");
  }

  private static final class CONCEPTS {
    /*package*/ static final SConcept RInvetarDLS$fY = MetaAdapterFactory.getConcept(0xd25897b99aa4e01L, 0x981001ea0072c283L, 0x2c7d7d2448d98cddL, "NewLanguage.structure.RInvetarDLS");
  }

  private static final class LINKS {
    /*package*/ static final SContainmentLink api$Tu3n = MetaAdapterFactory.getContainmentLink(0xd25897b99aa4e01L, 0x981001ea0072c283L, 0x2c7d7d2448d98cddL, 0x2c7d7d2448d98ce7L, "api");
    /*package*/ static final SContainmentLink endPointList$T71q = MetaAdapterFactory.getContainmentLink(0xd25897b99aa4e01L, 0x981001ea0072c283L, 0x2c7d7d2448d98cc4L, 0x2c7d7d2448d98cc6L, "endPointList");
    /*package*/ static final SContainmentLink show$Tuio = MetaAdapterFactory.getContainmentLink(0xd25897b99aa4e01L, 0x981001ea0072c283L, 0x2c7d7d2448d98cddL, 0x2c7d7d2448d98ce8L, "show");
    /*package*/ static final SReferenceLink cName$PX2q = MetaAdapterFactory.getReferenceLink(0xd25897b99aa4e01L, 0x981001ea0072c283L, 0x2c7d7d2448d98c8bL, 0x2c7d7d2448d98c8dL, "cName");
    /*package*/ static final SContainmentLink renders$Tuxp = MetaAdapterFactory.getContainmentLink(0xd25897b99aa4e01L, 0x981001ea0072c283L, 0x2c7d7d2448d98cddL, 0x2c7d7d2448d98ce9L, "renders");
  }
}
